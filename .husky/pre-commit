#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

BRANCH_NAME="$(git rev-parse --abbrev-ref HEAD)"

VALID_BRANCH_REGEX='^((fix|feat|ref)\/[a-zA-Z0-9\-]+)$'

if [[ ! $BRANCH_NAME =~ $VALID_BRANCH_REGEX ]]; then
    echo "There is something wrong with your branch name. Branch names in this project must follow the pattern: $VALID_BRANCH_REGEX. Your commit will be rejected. You should rename your branch to a valid name and try again."

    exit 1
fi

FRONTEND_FILES=$(git diff --cached --name-only --diff-filter=ACMRTUXB | grep -E "^packages/frontend/src/.*\.(ts$|tsx$)" | grep -v -E "^packages/frontend/src/[^/]+\.(ts$|tsx$)" | xargs -I{} find {} -path "*/src/*")
BACKEND_FILES=$(git diff --cached --name-only --diff-filter=ACMRTUXB | grep -E "^packages/backend/src/.*\.(ts$|tsx$)" | grep -v -E "^packages/backend/src/[^/]+\.(ts$|tsx$)" | xargs -I{} find {} -path "*/src/*")

ALL_FILES=()
ALL_FILES+=("${FRONTEND_FILES[@]}")
ALL_FILES+=("${BACKEND_FILES[@]}")

VALID_FILENAME_REGEX='.*'

for file in "${ALL_FILES[@]}"; do
	FILENAME=$(basename "$file")

	if [[ ! $FILENAME =~ $VALID_FILENAME_REGEX ]]; then
		echo "Invalid file name: $FILENAME. The file name must follow the pattern: {name}.{module}.{ts/tsx}. Your commit will be rejected. You should rename your files to a valid name and try again."

		exit 1
	fi
done

exit 0